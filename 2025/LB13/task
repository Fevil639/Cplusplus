#include <iostream>  // Підключаємо бібліотеку для введення/виведення
#include <ctime>     // Для отримання поточного часу
#include <cstdlib>   // Для функції rand() — генерація випадкових чисел
using namespace std;

int main() {
    srand(time(0)); // Ініціалізуємо генератор випадкових чисел (один раз)

    const int SIZE = 5; // Розмірність матриці 5x5
    int matrix[SIZE][SIZE]; // Оголошуємо двовимірний масив (матрицю)

    int *ptr = &matrix[0][0]; 
    // Вказівник ptr вказує на перший елемент матриці (0-й рядок, 0-й стовпець)
    // &matrix[0][0] — адреса першого елементу
    // ptr — це ЗМІННА, яка зберігає адресу в пам'яті
    // *ptr — значення за цією адресою

    int even = 0, odd = 0; // Лічильники парних та непарних

    // Заповнення матриці випадковими числами та підрахунок парних/непарних
    for (int i = 0; i < SIZE * SIZE; ++i, ++ptr) {
        // ++ptr — переходимо до наступного елементу
        *ptr = rand() % 100; // Записуємо у комірку випадкове число від 0 до 99
        if (*ptr % 2 == 0) even++; // Якщо число парне
        else odd++; // Інакше — непарне
    }

    cout << "Matrix:" << endl;
    ptr = &matrix[0][0]; // Знову вказуємо на початок матриці

    // Виведення матриці на екран
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j, ++ptr) {
            cout.width(4);  // Задаємо ширину виводу для вирівнювання
            cout << *ptr;   // Виводимо елемент за адресою ptr
        }
        cout << endl;
    }

    // Виведення головної діагоналі
    cout << "\nMain diagonal: ";
    ptr = &matrix[0][0]; // Знову на початок
    for (int i = 0; i < SIZE; ++i) {
        cout << *(ptr + i * SIZE + i) << " ";
        // ptr + i * SIZE + i — формула переходу до елементів [0][0], [1][1], [2][2]...
        // *(...) — отримуємо значення за адресою
    }

    // Виведення побічної діагоналі
    cout << "\nSecondary diagonal: ";
    for (int i = 0; i < SIZE; ++i) {
        cout << *(ptr + i * SIZE + (SIZE - 1 - i)) << " ";
        // Елементи [0][4], [1][3], [2][2], [3][1], [4][0]
    }

    // Виводимо кількість парних і непарних чисел
    cout << "\n\nEven count: " << even << endl;
    cout << "Odd count: " << odd << endl;

    return 0;
}
