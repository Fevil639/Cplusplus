#include <iostream>
#include <ctime>
#include <cmath>

using namespace std;
struct Date {
    int year;
    int month;
    int day;
};
bool isLeap(int year) {
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
}
int monthLength(int year, int month) {
    int daysInMonth[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    if (month == 2 && isLeap(year)) return 29;
    return daysInMonth[month - 1];
}
Date today() {
    time_t t = time(NULL);
    tm local = *localtime(&t);
    Date d;
    d.year = local.tm_year + 1900;
    d.month = local.tm_mon + 1;
    d.day = local.tm_mday;
    return d;
}
int daysSinceStart(Date d) {
    int days = d.day;
    for (int y = 1; y < d.year; y++) {
        days += isLeap(y) ? 366 : 365;
    }
    for (int m = 1; m < d.month; m++) {
        days += monthLength(d.year, m);
    }
    return days;
}
int main() {
    Date birth;
    birth.year = 2006; // Replace with your birth year
    birth.month = 5;   // Replace with your birth month
    birth.day = 31;    // Replace with your birth day
    Date now = today();
    int birthDays = daysSinceStart(birth);
    int nowDays = daysSinceStart(now);
    cout << "Days since birth: " << (nowDays - birthDays) << endl;
    return 0;
}
